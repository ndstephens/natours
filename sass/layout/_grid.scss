.row {
  max-width: $grid-width;
  /*//* auto center the '.row' block elements */
  margin: 0 auto;

  @include mq-tab-land {
    max-width: 95%;
  }

  @include mq-tab-port {
    max-width: 80%;
  }
  @include mq-phone {
    max-width: 85%;
  }

  &:not(:last-child) {
    margin-bottom: $gutter-vertical;

    @include mq-tab-port {
      margin-bottom: $gutter-vertical-sm;
    }
  }

  /*//* all rows will include columns that are floated, which therefore need to be cleared */
  @include clearfix;

  /*//* ATTRIBUTE SELECTOR!!!! */
  /*//* select all elements with a class of "col-..." */
  /*//* could also use a 'starts with' selector like '[class^='col-']' */
  [class*="col-"] {
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;

      @include mq-tab-port {
        margin-right: 0;
        margin-bottom: $gutter-vertical-sm;
      }
    }

    @include mq-tab-port {
      width: 100% !important;
    }
  }

  .col-1-of-2 {
    /*//* in Sass calc() must include variables in a '#{...}' syntax */
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  .col-1-of-3 {
    width: calc((100% - (2 * #{$gutter-horizontal})) / 3);
  }

  .col-2-of-3 {
    width: calc(
      2 * ((100% - (2 * #{$gutter-horizontal})) / 3) + #{$gutter-horizontal}
    );
  }

  .col-1-of-4 {
    width: calc((100% - (3 * #{$gutter-horizontal})) / 4);
  }

  .col-2-of-4 {
    width: calc(
      2 * ((100% - (3 * #{$gutter-horizontal})) / 4) + #{$gutter-horizontal}
    );
  }

  .col-3-of-4 {
    width: calc(
      3 * ((100% - (3 * #{$gutter-horizontal})) / 4) +
        (
          2 * #{$gutter-horizontal}
        )
    );
  }
}
